man_3_printf

Name
	_printf - formatted output conversion

Synopsis
	#include <stdio.h>
	#include <stdarg.h>
	int _printf(const char *format, ...);

Description
	The function produces output according to a format. Format controls the output just like in the printf function from the standard library.
    The format string is a character string, beginning  and  ending  in  its  initial  shiftstate, if any.  
    The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments.  
    Each conversion specification is introduced by the character %, and ends with a conversion specifier.   
    In between there may be (in this order) zero or more flags, an optional minimum field width, an optional precision and an optional length modifier.
	- %c a character
	- %s a string
	- %% a single %
	- %d a decimal (base 10) number
	- %i An integer in base 10

Return Value
	Upon successful return, these functions return the number of characters printed (excluding the null byte used to end output to strings).

Format
	Each conversion specifier is introduced by the % character and ends with a conversion specifier (c or s or d or i). If %% is passed, % is printed.

Example
    To print string 'I am a string'
	_printf("String:[%s]\n", "I am a string !");

    To print character 'H'
    _printf("Character:[%c]\n", 'H');

    To print integers '23' and '34' repectively
    _printf("Length:[%d, %i]\n", 23, 34);

Authors
	Ekpe Chukwubuikem and Joy Oparah.
